#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage[final]{nips_2016}

% to compile a camera-ready version, add the [final] option, e.g.:
% \usepackage[final]{nips_2016}

%\usepackage[utf8]{inputenc} % allow utf-8 input
%\usepackage[T1]{fontenc}    % use 8-bit T1 fonts
\usepackage{hyperref}       % hyperlinks
\usepackage{url}            % simple URL typesetting
\usepackage{booktabs}       % professional-quality tables
\usepackage{amsfonts}       % blackboard math symbols
\usepackage{nicefrac}       % compact symbols for 1/2, etc.
\usepackage{microtype}      % microtypography
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package babel
\inputencoding utf8
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Maxima - A Fast Fearless  Secure Sharded Block-Chain
\end_layout

\begin_layout Author
Maximilian E.
\begin_inset space ~
\end_inset

Chamberlin
\begin_inset Newline newline
\end_inset

 MA (Oxford) M.Phil (Cambridge)
\begin_inset Newline newline
\end_inset

 Maxima Organisation 
\begin_inset Newline newline
\end_inset

 
\family typewriter
mec@Maxima.org
\family default
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract
Recently, high demand and limited scalability have increased the average
 transaction times and fees in popular cryptocurrencies, yielding an unsatisfact
ory experience.
 Here we introduce Maxima a cryptocurrency with a sharded block-chain, one
 where the network is divided into partitions called shard which maintain
 their own blocks.
 
\end_layout

\begin_layout Abstract
In Maxima, validator committees are sampled for each shard.

\series bold
 
\series default
Validators vote on the availability of blocks to the network, and are shuffled
 off shards very quickly.
 Once a committee has determined if a block is accessible to nodes on a
 shard, nodes on that shard execute the transactions and verify the blocks
 validity- producing a succint fraud proof if the block is invalid.
 Cross shard transactions are managed using tools from distributed systems,
 like locks and yanks.
 
\end_layout

\begin_layout Abstract
Maxima is a globally distributed computer that is secure under an honest
 majority assumption, and puts in place mechanisms to prevent adaptive adversari
es from corrupting the network.
 We are one of the first proposals for a securely sharded block-chain that
 enables the execution of smart contracts.
 With 20 shards, Maxima is projected to process over 20,000 transactions
 per second.
 
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
In Bitcoin, blocks are added to the block-chain approximately every 10 minutes,
 at a relatively fixed pace that results in a TPS of 5-7.
 Simple solutions to expanding the capacity of the block-chain have found
 natural limits to their efficacy: enlarging blocks runs up against user
 bandwidth limits; hastening the rate at which blocks are mined increases
 orphaning.
 
\end_layout

\begin_layout Standard
A more promising solution to the problem of scaling is to run separate chains
 that process transactions within partitions of the network, called shards.
 The key challenges are: (1) how to manage the communication between the
 different shards, a problem which is closely related to ensuring the atomicity
 of transactions in a distributed system and (2) how to run these many separate
 block-chains in a way that does not compromise on security, since each
 shard-chain will only have a fraction of the mining/validation power of
 the network;
\end_layout

\begin_layout Standard
In this paper, we propose mechanisms to ensure the atomicity of transactions
 and to ensure that the security of separate chains is not compromised.
 We adopt an honest majority assumption for the network, assuming fewer
 than a fraction 
\begin_inset Formula $f$
\end_inset

 of 0.25 nodes are byzanine.
 Note 
\begin_inset Formula $f=0.25$
\end_inset

 is an arbitrary constant bounded below 1/3 to ensure good constants.
 We also put in place safe-guards against adaptive adversaries who may bribe
 network participants.
 
\end_layout

\begin_layout Section
Outline
\end_layout

\begin_layout Standard
Shard the block chain, each shard now has its own block-chain.
 We adopt a security model where it is assumed in the global pool fewer
 than 25% of miners are dishonest.
 We secure each chain by doing two things 
\end_layout

\begin_layout Itemize
Ensuring that sufficiently many nodes vote on blocks per round, to make
 it an infiniteseimally small probability that a block is added to the round.
 
\end_layout

\begin_layout Itemize
Ensuring that validators only vote very quickly on block, to limit the time
 that an adversary has to corrupt blocks.
 Think of someone offering bribes, the longer someone remains within a shard
 the easier it becomes to corrupt.
 
\end_layout

\begin_layout Itemize
The way that we achieve this is by separating state execution from validity
 checking.
 
\end_layout

\begin_layout Section
Inspiration 
\end_layout

\begin_layout Standard
We would like to thank Ethereum and Dfinity for the idea of separating state
 execution from validity checking.
 We further thank Ethereum and storJ for the initial idea of eraure codes.
 We also thank Zilliqa and dfinity for the idea of having committees vote
 on block, committees which are randomly sampled.
 
\end_layout

\begin_layout Standard
Our original contributions are: 
\end_layout

\begin_layout Itemize
Formalising a concrete mechanism for multi-dimensional erasure codes, without
 checking more than O(1) merkle roots.
 Previous solutions either relied on further data availability proofs or
 an increased burden pn verifiers.
 
\end_layout

\begin_layout Itemize
We also apply erasure codes in a novel way.
 Previous solutions to off-loading state execution to network participants
 relied on rounds of interactivity to generate proofs of incorrectness,
 See Trubeit.
 Instead, we use erasure codes to prove that intermediate state has been
 committed, which can serve to produce succinct fraud proofs with no interactivi
ty.
 
\end_layout

\begin_layout Itemize
We also developed several variants of a cross shard locking system which
 through discussions with Ethereum was adapted to a cross shard yanking
 system.
 
\end_layout

\begin_layout Section
Forking vs Fork-Free Consensus Protocols
\end_layout

\begin_layout Standard
Broadly speaking, there are two kinds of block-chain protocols: those that
 admit forks and those that don't.
 
\end_layout

\begin_layout Standard
One of the chief benefit of forking consensus protocols like Bitcoin, is
 that they allow the network to recover from majority attacks.
 Even if a 
\begin_inset Quotes eld
\end_inset

dishonest
\begin_inset Quotes erd
\end_inset

 majority creates an invalid chain, so long as the network recovers its
 honest majority, the invalid chain may be overtaken by a valid one.
 we may summarise this by saying: In Bitcoin, votes are continuously validate
 prior blocks and so no block is truly finalised.
 It may at any point be reverted.
 Conversely, in fork-free protocols, such as PBFT, once a vote validating
 a block occurs it is final.
 
\end_layout

\begin_layout Standard
However, in the context of a sharded block-chain forking consensus protocols
 need a great deal of extra apparatus due to inter-shard dependencies.
 If a fork on the block-chain occurs on shard A, and shard B has blocks
 that depend on the state in shard A, then a reversion of blocks on shard
 A will need to effect a reversions of blocks on shard B.
 Tracking all the state dependencies and ensuring that reversions do not
 revert too much of the global state is still an unsolved challenge.
 This problem is compounded by the fragmentation of state that comes with
 sharding.
 If state is distributed across many shards, then a large proportion of
 transactions on the block-chain reference state between shards, meaning
 a large number of dependencies.
 Bearing these thoughts in mind, a sharded block-chain must either: 
\end_layout

\begin_layout Enumerate
Track inter-shard dependencies created by transactions, and determine an
 efficient way of reverting those changes, thereby maintaining the resilience
 of the block-chain to majority attacks.
\end_layout

\begin_layout Enumerate
Adopt a consensus protocol that admits no forks at the application layer,
 thereby losing the flexibility of a block-chain to withstand short-lived
 50% attacks on the network.
\end_layout

\begin_layout Standard
In Maxima, we adopt the second approach but with the following fail-safe:
 In the event of a large-scale attack, whether clients would chose the dishonest
 chain or chose to revert those changes would be determined largely by social
 consensus: a proof that an attack had been performed by a dishonest majority
 with encouragement from the Maxima organisation about which block to revert
 to.
 This would be a similar mechanism to the Ethereum foundation's advice about
 which block to revert to after the Dao hack .
 
\end_layout

\begin_layout Standard
Having made the case for forking chains, it should be noted that in the
 entire history of Bitcoin only once was a block-chain reverted by more
 than its finalisation threshold of 6 blocks.
 This incident occured due to a mining consortium not checking block validity
 when mining.
 However, a social layer of consensus has been used at least twice to change
 the protocol.
 This means that using social consensus to resolve short-term attacks does
 not come with much overhead, if historical precedent is to be assumed.
\end_layout

\begin_layout Standard
Having said that, Maxima's approach would be to prevent any form of attack,
 and to provide strogner safety guarantees than Bitcoin- for instance by
 adopting proof of stake which reduces miner centralisation
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
There are significant economies of scale that come with proof of work mining:
 a huge amount of R&D funding is put into developing custom hardware for
 mining; low cost energy in certain parts of the world make mining pools
 far more attractive in parts of China than elsewhere.
 Such economies of scale are not present in proof of stake systems, which
 reduces miner centralisation.
\end_layout

\end_inset

.
 Furthermore, a number of popular block-chain protocols are also fork-free
 and so far fault tolerant, they include: NEO, Zilliqa,EOS.
 We aim for our system to be as resilient as these, but with much greater
 scalability due to sharding.
 In the long term, we will also explore methods for forkful sharding that
 resolves the problem of tracking inter-shard dependencies and reverting
 on block-chain forks, although that is not the present plan.
 
\end_layout

\begin_layout Section
Achieving Fork-Free Consensus
\end_layout

\begin_layout Standard
Fork-free protocols typically use BFT style algorithms.
 These are systems where a vote for a block consists of a prepare followed
 by a commit.
 They have been modified in recent times to create significant improvements.
 
\end_layout

\begin_layout Enumerate
The PBFT modification - have a leader who aggregates votes to improve efficiency
\end_layout

\begin_layout Enumerate
Subsample from the entire population so many validators are voting but not
 all (in Zilliqa, they use X).
 If say 400 participants are voting and we assume that f<25% are byzantine.
 We can show that the probability more than 2/3 of those voting are also
 byzantine is less than the number of atoms in the universe.
 
\end_layout

\begin_layout Enumerate
Ensure the right kind of marginal incentive structures exist.
 One can dot his by using a system similar to Caspar slashign conditions.
 Not only does this act as a deterrent, but will also be a key sign of bribary
 that could lead up to a social consensus step.
 
\end_layout

\begin_layout Enumerate
Selecting the participants randomly and quickly, using DFinity stuyle consensus.
 
\end_layout

\begin_layout Section
Separating Validity checking from State Execution
\end_layout

\begin_layout Itemize
Key to security is fast shuffling.
 This means that the excutors can't do a lot.
 
\end_layout

\begin_layout Itemize
They attest to availability of blocks, fixed if others agree not so if others
 disagree.
 
\end_layout

\begin_layout Section
Execution disputes and Validity
\end_layout

\begin_layout Itemize
Block creaters order and create transactions.
 The creators are sampled randomly from afixed set.
 
\end_layout

\begin_layout Itemize
They need a way of determining whether a transaction can pay them the gas
 to run the TX, and also if the ordering of transactions is correct.
 
\end_layout

\begin_layout Itemize
They need to do this without having access to all the state.
\end_layout

\begin_layout Itemize
Light clients can store all this information, and transactions need to include
 access lists of data that they need.
 
\end_layout

\begin_layout Itemize
Zero knowledge proofs that I have the gas needed.
 
\end_layout

\begin_layout Itemize
Q: how can a transaction determine if two things are blocking.
 Just create a merkle tree that tracks these things.
 
\end_layout

\begin_layout Itemize
We can use a multi-dimensional eraure code to determine quickly if some
 data is available.
 
\end_layout

\begin_layout Itemize
Key to security is fast shuffling.
 This means that the excutors can't do a lot.
 They can't maintain state on each shard.
 
\end_layout

\begin_layout Standard
Blocks are created within each shard, and the merkle root is signed on and
 shared with other shards.
 The question we now have is this? 
\end_layout

\begin_layout Standard
(1) How can we ensure that all of the data contained within a shard is available
 to all members of the shard?
\end_layout

\begin_layout Standard
(2) Given that data isavailable, this means anyone can report flaws.
\end_layout

\begin_layout Standard
The question is how can we prove that a block is available? 
\end_layout

\begin_layout Standard
One could require a majority of half the sampled validators perform availability
 checks and then sign off on the availability of a root.
 
\end_layout

\begin_layout Standard
Question is how can we feed in the right marginal incentives? 
\end_layout

\begin_layout Itemize
Have rewards for attesting yes, but with penalties if they don't have proof
 they checked for data availability.
 This means nodes are incentivised to say yes if they do have the data,
 but won't declare yes if they don't and know others won't check them.
 small reward for saying no.
 
\end_layout

\begin_layout Itemize
randomly check availables for a reveal, with sufficinelty high penalty that
 makes lying unprofitable.
 Also allow challenges for those who know ing wrong.
 For those who don't require a random reveal with sufficiently high penalties.
 => say that a person has 10 blocks to do so before being slashed.
 
\end_layout

\begin_layout Itemize
unavailable|available are losing their rewards 
\end_layout

\begin_layout Standard
If they are aware many other people do not have access to the data, they
 may vote yes anyway.
 
\end_layout

\begin_layout Standard

\series bold
However, we don't want validators to have to actualy execute the state.
 This would take too long.
 
\end_layout

\begin_layout Enumerate
How can we resolve this issue? Ethereum uses Truebit, which takes the form
 of an interactive verification game.
 The main issue with truebit is that it requires multiple rounds of verification
 and thus can result in low latency in cases where there is a dispute.
 
\end_layout

\begin_layout Enumerate
The approach that we take is to erasure encode the trace of the execution.
 We use a 3d erasure encoding to ensure that the fraud proofs are of a size
 cube-root(n).
 
\end_layout

\begin_layout Enumerate
Again using sampling techniques, we can assign validators to each transaction.
 
\end_layout

\begin_layout Section*
Stateless clients 
\end_layout

\begin_layout Section*
Erasure Coding 
\end_layout

\begin_layout Standard
We want validators to be able to guarantee that honest nodes can access
 data on the network, or stated more succinctly that 
\series bold
data is available
\series default
.
 A simple way for validators to check that data is available is to download
 a whole block.
 So, in the current scheme we would sample a set of validators - say 400,
 which is enough to guarantee an honest majority of participants.
 Then all of these shards would attempt to download the data from the network,
 and finaly take a vote between themselves on whether the data is available.
 
\end_layout

\begin_layout Standard
However, to increase efficiency, we would like to use a scheme where each
 validator need not download the entire block.
 If blocks were really large, say GB sized, which would be ideal for scalability
, it may be impractical to have validators enter a shard and download multiple
 blocks to verify availability.
\end_layout

\begin_layout Standard
We can avoid this, if we take a sampling approach.
 However, validators will not sample directly from the block itself, but
 instead will sample from an erasure code.
 
\end_layout

\begin_layout Standard
Why do we want validators to check that data is available for a block? If
 the data for a block is available to the network, this means that honest
 executors on a shard can check to see if there are any faults with it and
 produce succint fraud proofs, O(1) sized proofs that a block contains invalid
 data.
 
\end_layout

\begin_layout Standard
What this ultimately means is that executors on a shord can check to see
 if 
\end_layout

\begin_layout Standard
We don't actually want the validators to perform the executions themselves
 because doing so would take too long for large blocks of for transactions
 that take a long tiem to execute.
 
\end_layout

\begin_layout Itemize
N - the number of verifiers
\end_layout

\begin_layout Itemize
M - the size of a piece of data 
\end_layout

\begin_layout Itemize
P - the number of checks made by each client 
\end_layout

\begin_layout Standard
Collectively N verifiers want to check a block of size M is available.
 They wish to do so without 
\end_layout

\begin_layout Section*
Data Availability, State Execution and fast shuffling
\end_layout

\begin_layout Standard
The first question we should ask of the architecture is the nature of forks.
 Should a sharded-block-chain be fork-free? 
\end_layout

\begin_layout Standard
Dfinity overview:
\end_layout

\begin_layout Itemize
Random number generation to select block maker and notarisation group
\end_layout

\begin_layout Itemize
Notarization proves that a block has been published at some time, based
 on a group vote.
\end_layout

\begin_layout Itemize
Notarisation is more secure than a single vote.
 => Finality after two rounds.
\end_layout

\begin_layout Itemize

\series bold
Kind of taking a hybrid approach pBft and block based consensus.
 
\end_layout

\begin_layout Itemize
Good: 
\series bold
notarization in Dfinity is not primarily a validity guarantee but rather
 a timestamp plus a proof of publication' 
\end_layout

\begin_layout Itemize

\series bold
Good: almost fork-free; Good: still uses probabilistic consensus; Prevents
 long-range stake attacks
\end_layout

\begin_layout Standard
Neo:
\end_layout

\begin_layout Itemize
Delegated Proof of Stake.
 
\end_layout

\begin_layout Itemize
Finality after a single round.
 Why based on voting.
 
\end_layout

\begin_layout Standard
Zilliqa:
\end_layout

\begin_layout Itemize
Sampling into shards.
 
\end_layout

\begin_layout Itemize
Honest majority assumotio + PBFT, much more robust.
 
\end_layout

\begin_layout Itemize

\series bold
Good: Uses random sampling so robust vopting groups;
\end_layout

\begin_layout Itemize

\series bold
Bad: no slashable conditions.
 
\end_layout

\begin_layout Standard
Ethereum: 
\end_layout

\begin_layout Itemize
Splitting problems of availability from validity?
\end_layout

\begin_layout Itemize
Availability can be decided quickly.
 
\end_layout

\begin_layout Itemize
Validity decided by a kind of Trubit systle mechanism, which means validity
 can then be checked quickly.
\end_layout

\begin_layout Standard
Our Approach:
\end_layout

\begin_layout Itemize
Solve availability:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Block-chain based ..
 check the last 25 nodes for availability by downloading
\end_layout

\begin_layout Itemize
dfinity based..
 similar, perhaps more robust.
 
\end_layout

\begin_layout Itemize
Proof based: Present a proof of data availability, i.e erasure coding a block
 and getting signatures from half of validators
\end_layout

\begin_layout Itemize
Validators need only sign a hash, so the amount of work is constant* number
 of shards.
 
\end_layout

\begin_layout Itemize

\series bold
Putting accountability into dfinity, all one needs is a numnber that gets
 revealed after the event.
 
\end_layout

\begin_layout Itemize

\series bold
Q: How do we put in place marginal rewards on voting
\end_layout

\begin_layout Itemize

\series bold
A1: 
\series default
You sample a set of nodes to vote for availability, say 400; each round
 secret number per user, they need to compute a number based on this with
 their vote.
 ==> they have checked...
\end_layout

\begin_layout Itemize

\series bold
a1
\series default
: Lying is just contradicti9ng the majority...
 study largest block reversions in bitcoin...
 
\end_layout

\begin_layout Itemize

\series bold
want key shares to be revealed dfinity style.
 
\end_layout

\begin_layout Itemize

\series bold
A2: deposit into the chains to validate them, withdraw out when you can.
 
\end_layout

\end_deeper
\begin_layout Itemize
Solve validity
\end_layout

\begin_layout Itemize
truebit style execution 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
main disadvantage is the interactivity.
 
\end_layout

\begin_layout Itemize
one can imagine erasure codign execution steps to find efficient fraud proofs
\end_layout

\begin_layout Itemize

\series bold
Instead of a trubeit style verification game, one can just introduce hash
 check-points in compuitation.
 This reduces interactivity to 2 rounds, while keeping the amount of work
 done linear in the program size and 
\end_layout

\end_deeper
\begin_layout Itemize
Ensure that consensus is fork-free, fast and robust
\end_layout

\begin_layout Standard

\series bold
There is a new style file for papers submitted in 2016!
\end_layout

\begin_layout Standard
NIPS requires electronic submissions.
 The electronic submission site is 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://cmt.research.microsoft.com/NIPS2016/
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Please read carefully the instructions below and follow them faithfully.
\end_layout

\begin_layout Subsection
Style
\end_layout

\begin_layout Standard
Papers to be submitted to NIPS 2016 must be prepared according to the instructio
ns presented here.
 Papers may only be up to eight pages long, including figures.
 Since 2009 an additional ninth page 
\emph on
containing only acknowledgments and/or cited references
\emph default
 is allowed.
 Papers that exceed nine pages will not be reviewed, or in any other way
 considered for presentation at the conference.
\end_layout

\begin_layout Standard
The margins in 2016 are the same as since 2007, which allow for 
\begin_inset Formula $\sim$
\end_inset


\begin_inset Formula $15\%$
\end_inset

 more words in the paper compared to earlier years.
\end_layout

\begin_layout Standard
Authors are required to use the NIPS \SpecialChar LaTeX
 style files obtainable at the NIPS
 website as indicated below.
 Please make sure you use the current files and not previous versions.
 Tweaking the style files may be grounds for rejection.
\end_layout

\begin_layout Subsection
Retrieval of style files
\end_layout

\begin_layout Standard
The style files for NIPS and other conference information are available
 on the World Wide Web at 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.nips.cc/
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The file 
\family typewriter
nips_2016.pdf
\family default
 contains these instructions and illustrates the various formatting requirements
 your NIPS paper must satisfy.
\end_layout

\begin_layout Standard
The only supported style file for NIPS 2016 is 
\family typewriter
nips_2016.sty
\family default
, rewritten for \SpecialChar LaTeX2e
.
 
\series bold
Previous style files for \SpecialChar LaTeX
 2.09, Microsoft Word, and RTF are no longer supported!
\end_layout

\begin_layout Standard
The new \SpecialChar LaTeX
 style file contains two optional arguments: 
\family typewriter
final
\family default
, which creates a camera-ready copy, and 
\family typewriter
nonatbib
\family default
, which will not load the 
\family typewriter
natbib
\family default
 package for you in case of package clash.
\end_layout

\begin_layout Standard
At submission time, please omit the 
\family typewriter
final
\family default
 option.
 This will anonymize your submission and add line numbers to aid review.
 Please do 
\emph on
not
\emph default
 refer to these line numbers in your paper as they will be removed during
 generation of camera-ready copies.
\end_layout

\begin_layout Standard
The file 
\family typewriter
nips_2016.tex
\family default
 may be used as a 
\begin_inset Quotes eld
\end_inset

shell
\begin_inset Quotes erd
\end_inset

 for writing your paper.
 All you have to do is replace the author, title, abstract, and text of
 the paper with your own.
\end_layout

\begin_layout Standard
The formatting instructions contained in these style files are summarized
 in Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "gen_inst"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "headings"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "others"

\end_inset

 below.
\end_layout

\begin_layout Section
General formatting instructions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "gen_inst"

\end_inset


\end_layout

\begin_layout Standard
The text must be confined within a rectangle 5.5
\begin_inset space ~
\end_inset

inches (33
\begin_inset space ~
\end_inset

picas) wide and 9
\begin_inset space ~
\end_inset

inches (54
\begin_inset space ~
\end_inset

picas) long.
 The left margin is 1.5
\begin_inset space ~
\end_inset

inch (9
\begin_inset space ~
\end_inset

picas).
 Use 10
\begin_inset space ~
\end_inset

point type with a vertical spacing (leading) of 11
\begin_inset space ~
\end_inset

points.
 Times New Roman is the preferred typeface throughout, and will be selected
 for you by default.
 Paragraphs are separated by 
\begin_inset Formula $\nicefrac{1}{2}$
\end_inset


\begin_inset space ~
\end_inset

line space (5.5 points), with no indentation.
 
\end_layout

\begin_layout Standard
The paper title should be 17
\begin_inset space ~
\end_inset

point, initial caps/lower case, bold, centered between two horizontal rules.
 The top rule should be 4
\begin_inset space ~
\end_inset

points thick and the bottom rule should be 1
\begin_inset space ~
\end_inset

point thick.
 Allow 
\begin_inset Formula $\nicefrac{1}{4}$
\end_inset


\begin_inset space ~
\end_inset

inch space above and below the title to rules.
 All pages should start at 1
\begin_inset space ~
\end_inset

inch (6
\begin_inset space ~
\end_inset

picas) from the top of the page.
\end_layout

\begin_layout Standard
For the final version, authors' names are set in boldface, and each name
 is centered above the corresponding address.
 The lead author's name is to be listed first (left-most), and the co-authors'
 names (if different address) are set to follow.
 If there is only one co-author, list both author and co-author side by
 side.
\end_layout

\begin_layout Standard
Please pay special attention to the instructions in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "others"

\end_inset

 regarding figures, tables, acknowledgments, and references.
\end_layout

\begin_layout Section
Headings: first level
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "headings"

\end_inset


\end_layout

\begin_layout Standard
All headings should be lower case (except for first word and proper nouns),
 flush left, and bold.
\end_layout

\begin_layout Standard
First-level headings should be in 12-point type.
\end_layout

\begin_layout Subsection
Headings: second level
\end_layout

\begin_layout Standard
Second-level headings should be in 10-point type.
\end_layout

\begin_layout Subsubsection
Headings: third level
\end_layout

\begin_layout Standard
Third-level headings should be in 10-point type.
\end_layout

\begin_layout Paragraph
Paragraphs
\end_layout

\begin_layout Standard
There is also a 
\family typewriter

\backslash
paragraph
\family default
 command available, which sets the heading in bold, flush left, and inline
 with the text, with the heading followed by 1
\begin_inset space \thinspace{}
\end_inset

em of space.
\end_layout

\begin_layout Section
Citations, figures, tables, references
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "others"

\end_inset


\end_layout

\begin_layout Standard
These instructions apply to everyone.
\end_layout

\begin_layout Subsection
Citations within the text
\end_layout

\begin_layout Standard
The 
\family typewriter
natbib
\family default
 package will be loaded for you by default.
 Citations may be author/year or numeric, as long as you maintain internal
 consistency.
 As to the format of the references themselves, any style is acceptable
 as long as it is used consistently.
\end_layout

\begin_layout Standard
The documentation for 
\family typewriter
natbib
\family default
 may be found at 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://mirrors.ctan.org/macros/latex/contrib/natbib/natnotes.pdf
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Of note is the command 
\family typewriter

\backslash
citet
\family default
, which produces citations appropriate for use in inline text.
 For example, 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   
\backslash
citet{hasselmo} investigated
\backslash
dots
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
produces 
\end_layout

\begin_layout Quote
Hasselmo, et al.
\begin_inset space \space{}
\end_inset

(1995) investigated…
\end_layout

\begin_layout Standard
If you wish to load the 
\family typewriter
natbib
\family default
 package with options, you may add the following before loading the 
\family typewriter
nips_2016
\family default
 package: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   
\backslash
PassOptionsToPackage{options}{natbib}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
If 
\family typewriter
natbib
\family default
 clashes with another package you load, you can add the optional argument
 
\family typewriter
nonatbib
\family default
 when loading the style file: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   
\backslash
usepackage[nonatbib]{nips_2016}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
As submission is double blind, refer to your own published work in the third
 person.
 That is, use 
\begin_inset Quotes eld
\end_inset

In the previous work of Jones et al.
\begin_inset space \space{}
\end_inset

[4],
\begin_inset Quotes erd
\end_inset

 not 
\begin_inset Quotes eld
\end_inset

In our previous work [4].
\begin_inset Quotes erd
\end_inset

 If you cite your other papers that are not widely available (e.g., a journal
 paper under review), use anonymous author names in the citation, e.g., an
 author of the form 
\begin_inset Quotes eld
\end_inset

A.
\begin_inset space \space{}
\end_inset

Anonymous.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsection
Footnotes
\end_layout

\begin_layout Standard
Footnotes should be used sparingly.
 If you do require a footnote, indicate footnotes with a number
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Sample of the first footnote.
\end_layout

\end_inset

 in the text.
 Place the footnotes at the bottom of the page on which they appear.
 Precede the footnote with a horizontal rule of 2
\begin_inset space ~
\end_inset

inches (12
\begin_inset space ~
\end_inset

picas).
\end_layout

\begin_layout Standard
Note that footnotes are properly typeset 
\emph on
after
\emph default
 punctuation marks.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
As in this example.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Figures
\end_layout

\begin_layout Standard
All artwork must be neat, clean, and legible.
 Lines should be dark enough for purposes of reproduction.
 The figure number and caption always appear after the figure.
 Place one line space before the figure caption and one line space after
 the figure.
 The figure caption should be lower case (except for first word and proper
 nouns); figures are numbered consecutively.
\end_layout

\begin_layout Standard
You may use color figures.
 However, it is best for the figure captions and the paper body to be legible
 if the paper is printed in either black/white or in color.
 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "-.5cm"
width "0cm"
height "4cm"

\end_inset

 
\begin_inset CommandInset line
LatexCommand rule
offset "-.5cm"
width "4cm"
height "0cm"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample figure caption.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tables
\end_layout

\begin_layout Standard
All tables must be centered, neat, clean and legible.
 The table number and title always appear before the table.
 See Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sample-table"

\end_inset

.
\end_layout

\begin_layout Standard
Place one line space before the table title, one line space after the table
 title, and one line space after the table.
 The table title must be lower case (except for first word and proper nouns);
 tables are numbered consecutively.
\end_layout

\begin_layout Standard
Note that publication-quality tables 
\emph on
do not contain vertical rules.

\emph default
 We strongly suggest the use of the 
\family typewriter
booktabs
\family default
 package, which allows for typesetting high-quality, professional tables:
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.ctan.org/pkg/booktabs
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This package was used to typeset Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sample-table"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample table title
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sample-table"

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
Part
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size (
\begin_inset Formula $\mu$
\end_inset

m) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dendrite 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input terminal 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sim$
\end_inset

100 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Axon 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output terminal 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sim$
\end_inset

10 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soma 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cell body 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
up to 
\begin_inset Formula $10^{6}$
\end_inset

 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Final instructions
\end_layout

\begin_layout Standard
Do not change any aspects of the formatting parameters in the style files.
 In particular, do not modify the width or length of the rectangle the text
 should fit into, and do not change font sizes (except perhaps in the 
\series bold
References
\series default
 section; see below).
 Please note that pages should be numbered.
\end_layout

\begin_layout Section
Preparing PDF files
\end_layout

\begin_layout Standard
Please prepare submission files with paper size 
\begin_inset Quotes eld
\end_inset

US Letter,
\begin_inset Quotes erd
\end_inset

 and not, for example, 
\begin_inset Quotes eld
\end_inset

A4.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Fonts were the main cause of problems in the past years.
 Your PDF file must only contain Type 1 or Embedded TrueType fonts.
 Here are a few instructions to achieve this.
 
\end_layout

\begin_layout Itemize
You should directly generate PDF files using 
\family typewriter
pdflatex
\family default
.
 
\end_layout

\begin_layout Itemize
You can check which fonts a PDF files uses.
 In Acrobat Reader, select the menu Files
\begin_inset Formula $>$
\end_inset

Document Properties
\begin_inset Formula $>$
\end_inset

Fonts and select Show All Fonts.
 You can also use the program 
\family typewriter
pdffonts
\family default
 which comes with 
\family typewriter
xpdf
\family default
 and is available out-of-the-box on most Linux machines.
 
\end_layout

\begin_layout Itemize
The IEEE has recommendations for generating PDF files whose fonts are also
 acceptable for NIPS.
 Please see 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.emfield.org/icuwb2010/downloads/IEEE-PDF-SpecV32.pdf
\end_layout

\end_inset

 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The 
\family typewriter

\backslash
bbold
\family default
 package almost always uses bitmap fonts.
 You should use the equivalent AMS Fonts: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

    
\backslash
usepackage{amsfonts}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
followed by, e.g., 
\family typewriter

\backslash
mathbb{R}
\family default
,
\family typewriter
 
\backslash
mathbb{N}
\family default
, or 
\family typewriter

\backslash
mathbb{C}
\family default
 for 
\begin_inset Formula $\mathbb{R}$
\end_inset

, 
\begin_inset Formula $\mathbb{N}$
\end_inset

 or 
\begin_inset Formula $\mathbb{C}$
\end_inset

.
 You can also use the following workaround for reals, natural and complex:
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

    
\backslash
newcommand{
\backslash
RR}{I
\backslash
!
\backslash
!R} %real numbers
\end_layout

\begin_layout Plain Layout

    
\backslash
newcommand{
\backslash
Nat}{I
\backslash
!
\backslash
!N} %natural numbers
\end_layout

\begin_layout Plain Layout

    
\backslash
newcommand{
\backslash
CC}{I
\backslash
!
\backslash
!
\backslash
!
\backslash
!C} %complex numbers
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Note that 
\family typewriter
amsfonts
\family default
 is automatically loaded by the 
\family typewriter
amssymb
\family default
 package.
\end_layout

\end_deeper
\begin_layout Standard
If your file contains type 3 fonts or non embedded TrueType fonts, we will
 ask you to fix it.
\end_layout

\begin_layout Subsection
Margins in \SpecialChar LaTeX

\end_layout

\begin_layout Standard
Most of the margin problems come from figures positioned by hand using 
\family typewriter
special
\family default
 or other commands.
 We suggest using the command 
\family typewriter
includegraphics
\family default
 from the 
\family typewriter
graphicx
\family default
 package.
 Always specify the figure width as a multiple of the line width as in the
 example below: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   
\backslash
usepackage[pdftex]{graphicx} ...
\end_layout

\begin_layout Plain Layout

   
\backslash
includegraphics[width=0.8
\backslash
linewidth]{myfile.pdf}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
See Section 4.4 in the graphics bundle documentation (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://mirrors.ctan.org/macros/latex/required/graphics/grfguide.pdf
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
A number of width problems arise when \SpecialChar LaTeX
 cannot properly hyphenate a line.
 Please give 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

LaTeX
\end_layout

\end_inset

 hyphenation hints using the 
\family typewriter

\backslash
-
\family default
 command when necessary.
\end_layout

\begin_layout Subsubsection*
Acknowledgments
\end_layout

\begin_layout Standard
Use unnumbered third level headings for the acknowledgments.
 All acknowledgments go at the end of the paper.
 Do not include acknowledgments in the anonymized submission, only in the
 final paper.
\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Standard
References follow the acknowledgments.
 Use unnumbered first-level heading for the references.
 Any choice of citation style is acceptable as long as you are consistent.
 It is permissible to reduce the font size to 
\family typewriter
small
\family default
 (9 point) when listing the references.
 
\series bold
Remember that you can use a ninth page as long as it contains 
\emph on
only
\emph default
 cited references.

\series default
 
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\size small
[1] Alexander, J.A.
\begin_inset space \space{}
\end_inset

& Mozer, M.C.
\begin_inset space \space{}
\end_inset

(1995) Template-based algorithms for connectionist rule extraction.
 In G.
\begin_inset space \space{}
\end_inset

Tesauro, D.S.
\begin_inset space \space{}
\end_inset

Touretzky and T.K.
\begin_inset space \space{}
\end_inset

Leen (eds.), 
\shape italic
Advances in Neural Information Processing Systems 7
\shape default
, pp.
\begin_inset space \space{}
\end_inset

609–616.
 Cambridge, MA: MIT Press.
\end_layout

\begin_layout Standard

\size small
[2] Bower, J.M.
\begin_inset space \space{}
\end_inset

& Beeman, D.
\begin_inset space \space{}
\end_inset

(1995) 
\shape italic
The Book of GENESIS: Exploring Realistic Neural Models with the GEneral
 NEural SImulation System.

\shape default
 New York: TELOS/Springer–Verlag.
\end_layout

\begin_layout Standard

\size small
[3] Hasselmo, M.E., Schnell, E.
\begin_inset space \space{}
\end_inset

& Barkai, E.
\begin_inset space \space{}
\end_inset

(1995) Dynamics of learning and recall at excitatory recurrent synapses
 and cholinergic modulation in rat hippocampal region CA3.
 
\shape italic
Journal of Neuroscience
\shape default
 
\series bold
15
\series default
(7):5249-5262.
\end_layout

\end_body
\end_document
